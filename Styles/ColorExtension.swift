import SwiftUI

// Generated by Supernova - do not modify manually
public extension Color {
    
    static let Token = Color.TokenColor()
    
    struct TokenColor {

        // Colour

        // Core
        public let colourCorePrimary = Color(.sRGB, red: 12/255, green: 34/255, blue: 67/255, opacity: 1) 
        public let colourCoreSecondary = Color(.sRGB, red: 26/255, green: 121/255, blue: 209/255, opacity: 1) 
        public let colourCoreWhite = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colourCoreBlack = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 

        // Typography
        public let colourTypographyPrimary = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colourTypographySecondary = Color(.sRGB, red: 12/255, green: 34/255, blue: 67/255, opacity: 1) 

        // Background
        public let colourBackgroundPrimary = Color(.sRGB, red: 12/255, green: 34/255, blue: 67/255, opacity: 1) 
        public let colourBackgroundSecondary = Color(.sRGB, red: 26/255, green: 121/255, blue: 209/255, opacity: 1) 

        // colour

        // red
        public let colourred20 = Color(.sRGB, red: 246/255, green: 180/255, blue: 178/255, opacity: 1) 
        public let colourred30 = Color(.sRGB, red: 240/255, green: 130/255, blue: 128/255, opacity: 1) 
        public let colourred40 = Color(.sRGB, red: 234/255, green: 81/255, blue: 76/255, opacity: 1) 
        public let colourred50 = Color(.sRGB, red: 225/255, green: 6/255, blue: 0/255, opacity: 1) 
        public let colourred60 = Color(.sRGB, red: 194/255, green: 8/255, blue: 4/255, opacity: 1) 
        public let colourred70 = Color(.sRGB, red: 113/255, green: 14/255, blue: 16/255, opacity: 1) 

        // neutral
        public let colourneutral0 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colourneutral5 = Color(.sRGB, red: 243/255, green: 243/255, blue: 244/255, opacity: 1) 
        public let colourneutral10 = Color(.sRGB, red: 247/255, green: 244/255, blue: 241/255, opacity: 1) 
        public let colourneutral15 = Color(.sRGB, red: 237/255, green: 235/255, blue: 233/255, opacity: 1) 
        public let colourneutral20 = Color(.sRGB, red: 224/255, green: 222/255, blue: 220/255, opacity: 1) 
        public let colourneutral30 = Color(.sRGB, red: 205/255, green: 205/255, blue: 205/255, opacity: 1) 
        public let colourneutral40 = Color(.sRGB, red: 170/255, green: 170/255, blue: 170/255, opacity: 1) 
        public let colourneutral50 = Color(.sRGB, red: 96/255, green: 96/255, blue: 102/255, opacity: 1) 
        public let colourneutral60 = Color(.sRGB, red: 71/255, green: 70/255, blue: 76/255, opacity: 1) 
        public let colourneutral70 = Color(.sRGB, red: 71/255, green: 71/255, blue: 71/255, opacity: 1) 
        public let colourneutral80 = Color(.sRGB, red: 48/255, green: 48/255, blue: 55/255, opacity: 1) 
        public let colourneutral85 = Color(.sRGB, red: 38/255, green: 38/255, blue: 43/255, opacity: 1) 
        public let colourneutral90 = Color(.sRGB, red: 28/255, green: 28/255, blue: 37/255, opacity: 1) 
        public let colourneutral95 = Color(.sRGB, red: 21/255, green: 21/255, blue: 30/255, opacity: 1) 
        public let colourneutral100 = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colourneutralOverlay = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 0.6) 
        public let colourneutralTransparent = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 0) 

        // hot-red
        public let colourhotRed50 = Color(.sRGB, red: 225/255, green: 6/255, blue: 0/255, opacity: 1) 

        // magenta
        public let colourmagenta40 = Color(.sRGB, red: 237/255, green: 88/255, blue: 157/255, opacity: 1) 
        public let colourmagenta50 = Color(.sRGB, red: 229/255, green: 16/255, blue: 115/255, opacity: 1) 
        public let colourmagenta60 = Color(.sRGB, red: 187/255, green: 17/255, blue: 98/255, opacity: 1) 

        // purple
        public let colourpurple50 = Color(.sRGB, red: 100/255, green: 25/255, blue: 174/255, opacity: 1) 
        public let colourpurple70 = Color(.sRGB, red: 83/255, green: 0/255, blue: 166/255, opacity: 1) 
        public let colourpurple80 = Color(.sRGB, red: 55/255, green: 9/255, blue: 105/255, opacity: 1) 

        // yellow
        public let colouryellow40 = Color(.sRGB, red: 245/255, green: 212/255, blue: 61/255, opacity: 1) 
        public let colouryellow50 = Color(.sRGB, red: 255/255, green: 209/255, blue: 0/255, opacity: 1) 
        public let colouryellow60 = Color(.sRGB, red: 217/255, green: 179/255, blue: 8/255, opacity: 1) 

        // blue
        public let colourblue40 = Color(.sRGB, red: 64/255, green: 152/255, blue: 217/255, opacity: 1) 
        public let colourblue50 = Color(.sRGB, red: 0/255, green: 118/255, blue: 204/255, opacity: 1) 
        public let colourblue60 = Color(.sRGB, red: 4/255, green: 99/255, blue: 169/255, opacity: 1) 

        // primary
        public let colourprimaryPureBlack = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 

        // team
        public let colourteamRedBull = Color(.sRGB, red: 54/255, green: 113/255, blue: 198/255, opacity: 1) 
        public let colourteamFerrari = Color(.sRGB, red: 232/255, green: 0/255, blue: 45/255, opacity: 1) 
        public let colourteamMercedes = Color(.sRGB, red: 39/255, green: 244/255, blue: 210/255, opacity: 1) 
        public let colourteamMclaren = Color(.sRGB, red: 255/255, green: 128/255, blue: 0/255, opacity: 1) 
        public let colourteamAstonMartin = Color(.sRGB, red: 34/255, green: 153/255, blue: 113/255, opacity: 1) 
        public let colourteamAlpine = Color(.sRGB, red: 255/255, green: 135/255, blue: 188/255, opacity: 1) 
        public let colourteamKickSauber = Color(.sRGB, red: 82/255, green: 226/255, blue: 82/255, opacity: 1) 
        public let colourteamHaas = Color(.sRGB, red: 182/255, green: 186/255, blue: 189/255, opacity: 1) 
        public let colourteamRb = Color(.sRGB, red: 102/255, green: 146/255, blue: 255/255, opacity: 1) 
        public let colourteamWilliams = Color(.sRGB, red: 100/255, green: 196/255, blue: 255/255, opacity: 1) 

        // accessible
        public let colourteamaccessibleRedBull = Color(.sRGB, red: 25/255, green: 78/255, blue: 155/255, opacity: 1) 
        public let colourteamaccessibleFerrari = Color(.sRGB, red: 194/255, green: 0/255, blue: 38/255, opacity: 1) 
        public let colourteamaccessibleMercedes = Color(.sRGB, red: 2/255, green: 120/255, blue: 120/255, opacity: 1) 
        public let colourteamaccessibleMclaren = Color(.sRGB, red: 196/255, green: 85/255, blue: 0/255, opacity: 1) 
        public let colourteamaccessibleAstonMartin = Color(.sRGB, red: 18/255, green: 98/255, blue: 71/255, opacity: 1) 
        public let colourteamaccessibleAlpine = Color(.sRGB, red: 205/255, green: 35/255, blue: 110/255, opacity: 1) 
        public let colourteamaccessibleKickSauber = Color(.sRGB, red: 0/255, green: 132/255, blue: 2/255, opacity: 1) 
        public let colourteamaccessibleHaas = Color(.sRGB, red: 114/255, green: 119/255, blue: 124/255, opacity: 1) 
        public let colourteamaccessibleRb = Color(.sRGB, red: 69/255, green: 113/255, blue: 222/255, opacity: 1) 
        public let colourteamaccessibleWilliams = Color(.sRGB, red: 28/255, green: 124/255, blue: 183/255, opacity: 1) 

        // system
        public let coloursystemGreen = Color(.sRGB, red: 26/255, green: 137/255, blue: 48/255, opacity: 1) 
        public let coloursystemLightGreen = Color(.sRGB, red: 40/255, green: 151/255, blue: 62/255, opacity: 1) 
        public let coloursystemYellow = Color(.sRGB, red: 255/255, green: 209/255, blue: 0/255, opacity: 1) 
        public let coloursystemOrange = Color(.sRGB, red: 230/255, green: 103/255, blue: 0/255, opacity: 1) 
        public let coloursystemRed = Color(.sRGB, red: 233/255, green: 23/255, blue: 17/255, opacity: 1) 
        public let coloursystemLightRed = Color(.sRGB, red: 255/255, green: 45/255, blue: 39/255, opacity: 1) 
        public let coloursystemPositive = Color(.sRGB, red: 26/255, green: 137/255, blue: 48/255, opacity: 1) 
        public let coloursystemWarning = Color(.sRGB, red: 255/255, green: 209/255, blue: 0/255, opacity: 1) 
        public let coloursystemError = Color(.sRGB, red: 230/255, green: 103/255, blue: 0/255, opacity: 1) 
        public let coloursystemNegative = Color(.sRGB, red: 233/255, green: 23/255, blue: 17/255, opacity: 1) 
        public let coloursystemNeutral = Color(.sRGB, red: 96/255, green: 96/255, blue: 102/255, opacity: 1) 

        // f2
        public let colourf2LightBlue = Color(.sRGB, red: 0/255, green: 177/255, blue: 255/255, opacity: 1) 
        public let colourf2Blue = Color(.sRGB, red: 0/255, green: 144/255, blue: 208/255, opacity: 1) 
        public let colourf2DarkBlue = Color(.sRGB, red: 0/255, green: 66/255, blue: 103/255, opacity: 1) 

        // f3
        public let colourf3Grey = Color(.sRGB, red: 102/255, green: 102/255, blue: 102/255, opacity: 1) 
        public let colourf3Red = Color(.sRGB, red: 255/255, green: 0/255, blue: 0/255, opacity: 1) 

        // brand
        public let colourbrandHotRed = Color(.sRGB, red: 225/255, green: 6/255, blue: 0/255, opacity: 1) 
        public let colourbrandCarbonBlack = Color(.sRGB, red: 21/255, green: 21/255, blue: 30/255, opacity: 1) 
        public let colourbrandWarmWhite = Color(.sRGB, red: 247/255, green: 244/255, blue: 241/255, opacity: 1) 
        public let colourbrandSectorPurple = Color(.sRGB, red: 55/255, green: 9/255, blue: 105/255, opacity: 1) 
        public let colourbrandVividMagenta = Color(.sRGB, red: 229/255, green: 16/255, blue: 115/255, opacity: 1) 
        public let colourbrandPureWhite = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 

        // surface

        // primary
        public let coloursurfaceprimaryLight = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let coloursurfaceprimaryLightGraphite = Color(.sRGB, red: 243/255, green: 243/255, blue: 244/255, opacity: 1) 
        public let coloursurfaceprimaryWarmWhite = Color(.sRGB, red: 247/255, green: 244/255, blue: 241/255, opacity: 1) 
        public let coloursurfaceprimaryWarmGrey = Color(.sRGB, red: 224/255, green: 222/255, blue: 220/255, opacity: 1) 
        public let coloursurfaceprimaryLightGrey = Color(.sRGB, red: 205/255, green: 205/255, blue: 205/255, opacity: 1) 
        public let coloursurfaceprimaryGrey = Color(.sRGB, red: 170/255, green: 170/255, blue: 170/255, opacity: 1) 
        public let coloursurfaceprimaryDarkGrey = Color(.sRGB, red: 96/255, green: 96/255, blue: 102/255, opacity: 1) 
        public let coloursurfaceprimaryGraphiteGrey = Color(.sRGB, red: 71/255, green: 70/255, blue: 76/255, opacity: 1) 
        public let coloursurfaceprimaryWarmDark = Color(.sRGB, red: 48/255, green: 48/255, blue: 55/255, opacity: 1) 
        public let coloursurfaceprimaryDark = Color(.sRGB, red: 28/255, green: 28/255, blue: 37/255, opacity: 1) 

        // text
        public let colourtextLight = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colourtextWarmLight = Color(.sRGB, red: 247/255, green: 244/255, blue: 241/255, opacity: 1) 
        public let colourtextWarmDark = Color(.sRGB, red: 96/255, green: 96/255, blue: 102/255, opacity: 1) 
        public let colourtextDark = Color(.sRGB, red: 28/255, green: 28/255, blue: 37/255, opacity: 1) 
        public let colourtextPureBlack = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 

        // static
        public let colourstaticLight = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let colourstaticWarmLight = Color(.sRGB, red: 247/255, green: 244/255, blue: 241/255, opacity: 1) 
        public let colourstaticWarmGrey = Color(.sRGB, red: 224/255, green: 222/255, blue: 220/255, opacity: 1) 
        public let colourstaticLightGrey = Color(.sRGB, red: 205/255, green: 205/255, blue: 205/255, opacity: 1) 
        public let colourstaticGrey = Color(.sRGB, red: 170/255, green: 170/255, blue: 170/255, opacity: 1) 
        public let colourstaticDarkGrey = Color(.sRGB, red: 96/255, green: 96/255, blue: 102/255, opacity: 1) 
        public let colourstaticGraphiteGrey = Color(.sRGB, red: 71/255, green: 70/255, blue: 76/255, opacity: 1) 
        public let colourstaticWarmDark = Color(.sRGB, red: 48/255, green: 48/255, blue: 55/255, opacity: 1) 
        public let colourstaticDark = Color(.sRGB, red: 28/255, green: 28/255, blue: 37/255, opacity: 1) 
        public let colourstaticCarbonBlack = Color(.sRGB, red: 21/255, green: 21/255, blue: 30/255, opacity: 1) 
        public let colourstaticPureBlack = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 

        // vivid-magenta
        public let colourstaticvividMagenta40 = Color(.sRGB, red: 237/255, green: 88/255, blue: 157/255, opacity: 1) 
        public let colourstaticvividMagenta50 = Color(.sRGB, red: 229/255, green: 16/255, blue: 115/255, opacity: 1) 
        public let colourstaticvividMagenta60 = Color(.sRGB, red: 187/255, green: 17/255, blue: 98/255, opacity: 1) 

        // sector-purple
        public let colourstaticsectorPurple50 = Color(.sRGB, red: 100/255, green: 25/255, blue: 174/255, opacity: 1) 
        public let colourstaticsectorPurple70 = Color(.sRGB, red: 83/255, green: 0/255, blue: 166/255, opacity: 1) 
        public let colourstaticsectorPurple80 = Color(.sRGB, red: 55/255, green: 9/255, blue: 105/255, opacity: 1) 

        // button
        public let colourbuttonOverlay = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 0.6) 

        // primary
        public let colourbuttonprimaryHover = Color(.sRGB, red: 194/255, green: 8/255, blue: 4/255, opacity: 1) 
        public let colourbuttonprimaryDefault = Color(.sRGB, red: 225/255, green: 6/255, blue: 0/255, opacity: 1) 

        // secondary
        public let colourbuttonsecondaryDefault = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 1) 
        public let colourbuttonsecondaryHover = Color(.sRGB, red: 170/255, green: 170/255, blue: 170/255, opacity: 1) 

        // tertiary
        public let colourbuttontertiaryDefault = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 0) 
        public let colourbuttontertiaryHover = Color(.sRGB, red: 237/255, green: 235/255, blue: 233/255, opacity: 1) 

        // tonal
        public let colourbuttontonalDefault = Color(.sRGB, red: 224/255, green: 222/255, blue: 220/255, opacity: 1) 
        public let colourbuttontonalHover = Color(.sRGB, red: 170/255, green: 170/255, blue: 170/255, opacity: 1) 

        // accent

        // hot-red
        public let colouraccenthotRed30 = Color(.sRGB, red: 240/255, green: 130/255, blue: 128/255, opacity: 1) 
        public let colouraccenthotRed20 = Color(.sRGB, red: 246/255, green: 180/255, blue: 178/255, opacity: 1) 
        public let colouraccenthotRed40 = Color(.sRGB, red: 234/255, green: 81/255, blue: 76/255, opacity: 1) 
        public let colouraccenthotRed50 = Color(.sRGB, red: 225/255, green: 6/255, blue: 0/255, opacity: 1) 
        public let colouraccenthotRed60 = Color(.sRGB, red: 194/255, green: 8/255, blue: 4/255, opacity: 1) 

        // vivid-magenta
        public let colouraccentvividMagenta40 = Color(.sRGB, red: 237/255, green: 88/255, blue: 157/255, opacity: 1) 
        public let colouraccentvividMagenta50 = Color(.sRGB, red: 229/255, green: 16/255, blue: 115/255, opacity: 1) 
        public let colouraccentvividMagenta60 = Color(.sRGB, red: 187/255, green: 17/255, blue: 98/255, opacity: 1) 

        // sector-purple
        public let colouraccentsectorPurple50 = Color(.sRGB, red: 100/255, green: 25/255, blue: 174/255, opacity: 1) 
        public let colouraccentsectorPurple70 = Color(.sRGB, red: 83/255, green: 0/255, blue: 166/255, opacity: 1) 
        public let colouraccentsectorPurple80 = Color(.sRGB, red: 55/255, green: 9/255, blue: 105/255, opacity: 1) 

        // sunny-yellow
        public let colouraccentsunnyYellow40 = Color(.sRGB, red: 245/255, green: 212/255, blue: 61/255, opacity: 1) 
        public let colouraccentsunnyYellow50 = Color(.sRGB, red: 255/255, green: 209/255, blue: 0/255, opacity: 1) 
        public let colouraccentsunnyYellow60 = Color(.sRGB, red: 217/255, green: 179/255, blue: 8/255, opacity: 1) 

        // bright-blue
        public let colouraccentbrightBlue40 = Color(.sRGB, red: 64/255, green: 152/255, blue: 217/255, opacity: 1) 
        public let colouraccentbrightBlue50 = Color(.sRGB, red: 0/255, green: 118/255, blue: 204/255, opacity: 1) 
        public let colouraccentbrightBlue60 = Color(.sRGB, red: 4/255, green: 99/255, blue: 169/255, opacity: 1) 

        // live
        public let colourliveDot = Color(.sRGB, red: 0/255, green: 144/255, blue: 208/255, opacity: 1) 

        // Tokens

        // colour

        // team
        public let tokenscolourteamRedBull = Color(.sRGB, red: 54/255, green: 113/255, blue: 198/255, opacity: 1) 
        public let tokenscolourteamFerrari = Color(.sRGB, red: 232/255, green: 0/255, blue: 45/255, opacity: 1) 
        public let tokenscolourteamMercedes = Color(.sRGB, red: 39/255, green: 244/255, blue: 210/255, opacity: 1) 
        public let tokenscolourteamMclaren = Color(.sRGB, red: 255/255, green: 128/255, blue: 0/255, opacity: 1) 
        public let tokenscolourteamAstonMartin = Color(.sRGB, red: 34/255, green: 153/255, blue: 113/255, opacity: 1) 
        public let tokenscolourteamAlpine = Color(.sRGB, red: 255/255, green: 135/255, blue: 188/255, opacity: 1) 
        public let tokenscolourteamKickSauber = Color(.sRGB, red: 82/255, green: 226/255, blue: 82/255, opacity: 1) 
        public let tokenscolourteamHaas = Color(.sRGB, red: 182/255, green: 186/255, blue: 189/255, opacity: 1) 
        public let tokenscolourteamRb = Color(.sRGB, red: 102/255, green: 146/255, blue: 255/255, opacity: 1) 
        public let tokenscolourteamWilliams = Color(.sRGB, red: 100/255, green: 196/255, blue: 255/255, opacity: 1) 

        // accessible
        public let tokenscolourteamaccessibleRedBull = Color(.sRGB, red: 25/255, green: 78/255, blue: 155/255, opacity: 1) 
        public let tokenscolourteamaccessibleFerrari = Color(.sRGB, red: 194/255, green: 0/255, blue: 38/255, opacity: 1) 
        public let tokenscolourteamaccessibleMercedes = Color(.sRGB, red: 2/255, green: 120/255, blue: 120/255, opacity: 1) 
        public let tokenscolourteamaccessibleMclaren = Color(.sRGB, red: 196/255, green: 85/255, blue: 0/255, opacity: 1) 
        public let tokenscolourteamaccessibleAstonMartin = Color(.sRGB, red: 18/255, green: 98/255, blue: 71/255, opacity: 1) 
        public let tokenscolourteamaccessibleAlpine = Color(.sRGB, red: 205/255, green: 35/255, blue: 110/255, opacity: 1) 
        public let tokenscolourteamaccessibleKickSauber = Color(.sRGB, red: 0/255, green: 132/255, blue: 2/255, opacity: 1) 
        public let tokenscolourteamaccessibleHaas = Color(.sRGB, red: 114/255, green: 119/255, blue: 124/255, opacity: 1) 
        public let tokenscolourteamaccessibleRb = Color(.sRGB, red: 69/255, green: 113/255, blue: 222/255, opacity: 1) 
        public let tokenscolourteamaccessibleWilliams = Color(.sRGB, red: 28/255, green: 124/255, blue: 183/255, opacity: 1) 

        // f2
        public let tokenscolourf2LightBlue = Color(.sRGB, red: 0/255, green: 177/255, blue: 255/255, opacity: 1) 
        public let tokenscolourf2Blue = Color(.sRGB, red: 0/255, green: 144/255, blue: 208/255, opacity: 1) 
        public let tokenscolourf2DarkBlue = Color(.sRGB, red: 0/255, green: 66/255, blue: 103/255, opacity: 1) 

        // f3
        public let tokenscolourf3Grey = Color(.sRGB, red: 102/255, green: 102/255, blue: 102/255, opacity: 1) 
        public let tokenscolourf3Red = Color(.sRGB, red: 255/255, green: 0/255, blue: 0/255, opacity: 1) 

        // hack

        /// This is a Figma workaround for layers that have shadows but no background color.
        public let hackDoNotImplement = Color(.sRGB, red: 0/255, green: 0/255, blue: 0/255, opacity: 0) 
    }
}